// <auto-generated />
using GuitarVendor.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GuitarVendor.Migrations
{
    [DbContext(typeof(GuitarVendorContext))]
    [Migration("20231113223425_AddJoinTableForStoreAndGuitarModels")]
    partial class AddJoinTableForStoreAndGuitarModels
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("GuitarVendor.Models.Guitar", b =>
                {
                    b.Property<int>("GuitarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Brand")
                        .HasColumnType("longtext");

                    b.Property<string>("Color")
                        .HasColumnType("longtext");

                    b.Property<string>("Model")
                        .HasColumnType("longtext");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("GuitarId");

                    b.HasIndex("StoreId");

                    b.ToTable("Guitars");
                });

            modelBuilder.Entity("GuitarVendor.Models.Store", b =>
                {
                    b.Property<int>("StoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("StoreId");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("GuitarVendor.Models.StoreGuitar", b =>
                {
                    b.Property<int>("StoreGuitarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("GuitarId")
                        .HasColumnType("int");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("StoreGuitarId");

                    b.HasIndex("GuitarId");

                    b.HasIndex("StoreId");

                    b.ToTable("StoreGuitars");
                });

            modelBuilder.Entity("GuitarVendor.Models.Guitar", b =>
                {
                    b.HasOne("GuitarVendor.Models.Store", "Store")
                        .WithMany("Guitars")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Store");
                });

            modelBuilder.Entity("GuitarVendor.Models.StoreGuitar", b =>
                {
                    b.HasOne("GuitarVendor.Models.Guitar", "Guitar")
                        .WithMany("JoinEntities")
                        .HasForeignKey("GuitarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GuitarVendor.Models.Store", "Store")
                        .WithMany("JoinEntities")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guitar");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("GuitarVendor.Models.Guitar", b =>
                {
                    b.Navigation("JoinEntities");
                });

            modelBuilder.Entity("GuitarVendor.Models.Store", b =>
                {
                    b.Navigation("Guitars");

                    b.Navigation("JoinEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
